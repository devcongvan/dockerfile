// tạo giới hạn cho đoạn text dài
@mixin truncate($width: 100%) {
  　　max-width: $width;
  　　display: block;
  　　overflow: hidden;
  　　white-space: nowrap;
  　　text-overflow: ellipsis;
}
// tự sinh link color
@mixin link-color($color) {
  color: $color;

  &:hover, &:active, &:focus {
    color: lighten($color, 20%);
  }
}
// định vị trí center cho box hoặc đối tượng
@mixin transform-position-center($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

//
@mixin transform-margin-center($direction){
  @if $direction=='vertical'{
    margin-top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }@else if $direction=='horizontal'{
    margin-left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);

  }@else if $direction=='both'{
    margin-top: 50%;
    margin-left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}
// tạo font face
@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix') format('embedded-opentype'),
    url($file-name + '.woff') format('woff'),
    url($file-name + '.ttf') format('truetype'),
    url($file-name + '.svg##{$font-name}') format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}